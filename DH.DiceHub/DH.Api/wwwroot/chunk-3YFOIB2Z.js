import{Ec as E,Gc as _,L as M,O as r,a as N}from"./chunk-JJGLVIRE.js";var s=(()=>{let e=class e{constructor(A){this.api=A}getTableById(A){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${A}`)}getReservationById(A){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_RESERVATION_BY_ID}/${A}`)}getActiveReservedTableList(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_ACTIVE_RESERVED_TABLES}`)}getActiveReservedTablesCount(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_ACTIVE_RESERVED_TABLES_COUNT}`)}getActiveReservedTableList_BackgroundRequest(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_ACTIVE_RESERVED_TABLES}`,{},!0)}getReservationHistory(A=null){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_RESERVATION_HISTORY}`,{status:A})}getUserActiveTable(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_USER_ACTIVE_TABLE}`)}getSpaceActivityStats(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_SPACE_ACTIVITY_STATS}`)}getSpaceTableParticipantList(A,t=""){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_TABLE_PARTICIPANTS}`,{id:A,searchExpression:t})}getSpaceAvailableTableList(A=""){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_SPACE_AVAILABLE_TABLES}`,{searchExpressionName:A})}getActiveBookedTable(){return this.api.get(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.GET_ACTIVE_BOOKED_TABLE}`)}add(A){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}`,N({},A))}update(A){return this.api.put(`/${E.SPACE_MANAGEMENT.CORE}`,N({},A))}updateReservation(A,t,T){return this.api.put(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.UPDATE_RESERVATION}`,{id:A,publicNote:t,internalNote:T})}approveReservation(A,t,T){return this.api.put(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.APPROVE_RESERVATION}`,{reservationId:A,publicNote:t,internalNote:T})}declinedReservation(A,t,T){return this.api.put(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.DECLINE_RESERVATION}`,{reservationId:A,publicNote:t,internalNote:T})}deleteReservation(A){return this.api.delete(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.DELETE_RESERVATION}/${A}`)}join(A,t=""){return this.api.put(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.JOIN}`,{id:A,password:t})}bookTable(A,t,T){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.BOOK_TABLE}`,{numberOfGuests:A,reservationDate:t,time:T})}closeTable(A){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.CLOSE_TABLE}`,{id:A})}removeUserFromTable(A,t){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.REMOVE_USER_FROM_TABLE}`,{id:A,userId:t})}leaveTable(A){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.LEAVE_TABLE}`,{id:A})}addVirtualParticipant(A){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.ADD_VIRTUAL_PARTICIPANT}`,{spaceTableId:A})}removeVirtualParticipant(A,t){return this.api.post(`/${E.SPACE_MANAGEMENT.CORE}/${E.SPACE_MANAGEMENT.REMOVE_VIRTUAL_PARTICIPANT}`,{spaceTableId:A,participantId:t})}};e.\u0275fac=function(t){return new(t||e)(r(_))},e.\u0275prov=M({token:e,factory:e.\u0275fac,providedIn:"root"});let i=e;return i})();export{s as a};
