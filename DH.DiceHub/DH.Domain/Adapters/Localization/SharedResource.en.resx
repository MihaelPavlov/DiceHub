<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidEmailOrPass" xml:space="preserve">
    <value>Email or Password is invalid! </value>
  </data>
  <data name="EmailNotConfirmed" xml:space="preserve">
    <value>Email not confirmed. Please check your inbox.</value>
  </data>
  <data name="UserExistUsername" xml:space="preserve">
    <value>User with that Username, already exist </value>
  </data>
  <data name="UserRegistrationFailed" xml:space="preserve">
    <value> User registration failed!  </value>
  </data>
  <data name="UserNotCreated" xml:space="preserve">
    <value>User was not created</value>
  </data>
  <data name="UserByEmailNotFound" xml:space="preserve">
    <value>We couldn’t find a user with that email address. </value>
  </data>
  <data name="UserExistEmail" xml:space="preserve">
    <value>User with that Email, already exist</value>
  </data>
  <data name="ConfirmEmailInvalidToken" xml:space="preserve">
    <value>The confirmation link is invalid or has expired. Please request a new one.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User was not found</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Passwords are not identical! </value>
  </data>
  <data name="PasswordResetFailed" xml:space="preserve">
    <value>Resetting password was not successful. Please try again later or contact us via email.</value>
  </data>
  <data name="NotProvided" xml:space="preserve">
    <value>Not Provided</value>
  </data>
  <data name="UsernameNotProvided" xml:space="preserve">
    <value>Username not provided</value>
  </data>
  <data name="OnlyOwnerCreateEmployees" xml:space="preserve">
    <value>Only the owner can create new employees.</value>
  </data>
  <data name="UserFirstLastNamesExists" xml:space="preserve">
    <value>A user with the same first and last name already exists.</value>
  </data>
  <data name="UserRegistrationFailedDuringRoleAssignment" xml:space="preserve">
    <value>User registration failed due to missing required roles. Please contact support.</value>
  </data>
  <data name="OnlySuperAdminCreateOwner" xml:space="preserve">
    <value>Only SuperAdmin can add owner</value>
  </data>
  <data name="OwnerAlreadyExists" xml:space="preserve">
    <value>An owner already exists.</value>
  </data>
  <data name="PhoneNumberMismatch" xml:space="preserve">
    <value>Provided phone number does not match the one associated with this account</value>
  </data>
  <data name="PasswordResetLinkInvalidOrExpired" xml:space="preserve">
    <value>The password reset link is either invalid or has expired. Please request a new one or contact support if the issue persists.</value>
  </data>
  <data name="PasswordSetError" xml:space="preserve">
    <value>Something went wrong while setting the password. Please try again, or reach out to our support team via email if the problem continues.</value>
  </data>
  <data name="EmployeeDeletionFailed" xml:space="preserve">
    <value>Employee deletion failed!</value>
  </data>
  <data name="OnlyOwnerCanUpdateEmployee" xml:space="preserve">
    <value>Only owner can update employee.</value>
  </data>
  <data name="MaxPlayersCannotBeLessThanMinPlayers" xml:space="preserve">
    <value>Max players cannot be less than the min players.</value>
  </data>
  <data name="NameShouldBeAtLeastXCharactersLong" xml:space="preserve">
    <value>Name should be at least {0} characters long.</value>
  </data>
  <data name="ReservationAlreadyExists" xml:space="preserve">
    <value>You already have an active reservation.</value>
  </data>
  <data name="UtcFallbackNotice" xml:space="preserve">
    <value>UTC (local time unavailable)</value>
  </data>
  <data name="NewGameReservationReminderTitle" xml:space="preserve">
    <value>New Game Reservation Reminder</value>
  </data>
  <data name="NewGameReservationReminderBody" xml:space="preserve">
    <value>User {0} made a new reservation. Reserve a table for {1} {2} to play **{3}** at {4}.</value>
  </data>
  <data name="W_Person" xml:space="preserve">
    <value>person</value>
  </data>
  <data name="W_People" xml:space="preserve">
    <value>people</value>
  </data>
  <data name="GameReservationApprovedTitle" xml:space="preserve">
    <value>Game Reservation Approved</value>
  </data>
  <data name="GameReservationApprovedBody" xml:space="preserve">
    <value>Your reservation for game **{0}** for {1} {2} at {3} is CONFIRMED!</value>
  </data>
  <data name="GameReservationDeclinedTitle" xml:space="preserve">
    <value>Game Reservation Declined</value>
  </data>
  <data name="GameReservationDeclinedBody" xml:space="preserve">
    <value>Your reservation for game **{0}** for {1} {2} at {3} has been DECLINED.</value>
  </data>
  <data name="GameReservationNoteChangedTitle" xml:space="preserve">
    <value>Game Reservation Note Changed!</value>
  </data>
  <data name="GameReservationNoteChangedBody" xml:space="preserve">
    <value>Your game reservation for {0} {1} at {2} has a new note, please review it!</value>
  </data>
  <data name="EventDeletedTitle" xml:space="preserve">
    <value>Notice: Event Cancelled</value>
  </data>
  <data name="EventDeletedBody" xml:space="preserve">
    <value>We're sorry to inform you that the event **{0}**, originally scheduled for **{1}**, has been cancelled. We apologize for the inconvenience and appreciate your understanding.</value>
  </data>
  <data name="EventReminderTitle" xml:space="preserve">
    <value>Reminder: Upcoming Event</value>
  </data>
  <data name="EventReminderBody" xml:space="preserve">
    <value>Don't forget! You're registered for the event {0} happening on {1}. We look forward to seeing you there!</value>
  </data>
  <data name="EventStartDateUpdatedTitle" xml:space="preserve">
    <value>Event Start Date Updated</value>
  </data>
  <data name="EventStartDateUpdateBody" xml:space="preserve">
    <value>The start date for **{0}** has been updated to **{1}**. We look forward to seeing you there!</value>
  </data>
  <data name="NewEventAddedTitle" xml:space="preserve">
    <value>New Event Added</value>
  </data>
  <data name="NewEventAddedBody" xml:space="preserve">
    <value>A new event **{0}** has been scheduled for **{1}**. Join us and enjoy the experience!</value>
  </data>
  <data name="RegistrationMessageTitle" xml:space="preserve">
    <value>Welcome to {0}!</value>
  </data>
  <data name="RegistrationMessageBody" xml:space="preserve">
    <value>Hello {0}, welcome aboard! Thank you for registering. To get started, check out our instructions for more details.</value>
  </data>
  <data name="RewardExpirationReminderTitle" xml:space="preserve">
    <value>Your reward is about to expire in {0} {1}!</value>
  </data>
  <data name="RewardExpirationReminderBody" xml:space="preserve">
    <value>Don't miss out! Your reward **{0}** will expire in {1} {2}. Visit the club soon to claim it before it's gone!</value>
  </data>
  <data name="Day_Singular" xml:space="preserve">
    <value>day</value>
  </data>
  <data name="Day_Plural" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="RewardExpiredTitle" xml:space="preserve">
    <value>Reward Expired. Don't worry, visit the club for more awesome rewards</value>
  </data>
  <data name="RewardExpiredBody" xml:space="preserve">
    <value>Unfortunately your reward has expired: {0}!</value>
  </data>
  <data name="SpaceTableApprovedTitle" xml:space="preserve">
    <value>Table Reservation Approved</value>
  </data>
  <data name="SpaceTableApprovedBody" xml:space="preserve">
    <value>Your table reservation for {0} {1} at {2} is CONFIRMED!</value>
  </data>
  <data name="SpaceTableDeclinedTitle" xml:space="preserve">
    <value>Table Reservation Declined</value>
  </data>
  <data name="SpaceTableDeclinedBody" xml:space="preserve">
    <value>Your table reservation for {0} {1} at {2} is DECLINED!</value>
  </data>
  <data name="SpaceTableNoteUpdatedTitle" xml:space="preserve">
    <value>Table Reservation Note Changed!</value>
  </data>
  <data name="SpaceTableNoteUpdatedBody" xml:space="preserve">
    <value>Your table reservation for {0} {1} at {2} has a new note, please review it!</value>
  </data>
  <data name="SpaceTableReservationReminderTitle" xml:space="preserve">
    <value>New Table Reservation Reminder</value>
  </data>
  <data name="SpaceTableReservationReminderBody" xml:space="preserve">
    <value>You have a new table reservation. Reserve a table for {0} {1} at {2}!</value>
  </data>
</root>